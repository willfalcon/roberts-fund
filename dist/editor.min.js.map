{"version":3,"file":"editor.min.js","mappings":"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","sources":["webpack://roberts-fund/./node_modules/classnames/index.js","webpack://roberts-fund/webpack/bootstrap","webpack://roberts-fund/./src/scripts/editor.js"],"sourcesContent":["/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const classNames = require('classnames');\n\n// Blocks to add the text-wrap option to\nconst enableTextWrapButtonOnBlocks = [\n  'core/paragraph',\n  'core/heading',\n  'core/list',\n  'core/list-item',\n  'core/quote',\n  'core/verse',\n  'core/post-title',\n  'core/post-excerpt',\n  'core/post-content',\n];\n\n// Add custom attribute to paragraph for text-wrap\nfunction setToolbarButtonAttribute(settings, name) {\n  if (!enableTextWrapButtonOnBlocks.includes(name)) {\n    return settings;\n  }\n  return Object.assign({}, settings, {\n    attributes: Object.assign({}, settings.attributes, {\n      textWrap: {\n        type: 'string',\n      },\n    }),\n  });\n}\nwp.hooks.addFilter('blocks.registerBlockType', 'custom-attributes/text-wrap', setToolbarButtonAttribute);\n\n// Add button to paragraph toolbar to activate/deactivate text-wrap: balance\nconst el = wp.element.createElement;\nconst withTextWrapButton = wp.compose.createHigherOrderComponent(BlockEdit => {\n  return props => {\n    if (!enableTextWrapButtonOnBlocks.includes(props.name)) {\n      return el(BlockEdit, { ...props });\n    }\n    const { attributes, setAttributes } = props;\n    const { textWrap } = attributes;\n    return el(\n      wp.element.Fragment,\n      {},\n      el(\n        wp.blockEditor.BlockControls,\n        {\n          group: 'inline',\n        },\n        el(\n          wp.components.ToolbarGroup,\n          {},\n          el(wp.components.ToolbarButton, {\n            icon: 'editor-alignleft',\n            label: wp.i18n.__('Text Wrap: Balance', 'mdhs'),\n            isActive: textWrap === 'balance',\n            onClick: () => {\n              if (textWrap === 'balance') {\n                setAttributes({ textWrap: 'normal' });\n              } else {\n                setAttributes({ textWrap: 'balance' });\n              }\n            },\n          })\n        )\n      ),\n      el(BlockEdit, { ...props })\n    );\n  };\n}, 'withTextWrapButton');\nwp.hooks.addFilter('editor.BlockEdit', 'custom-attributes/with-text-wrap-button', withTextWrapButton);\n\n// Add css class to block wrapper based on attribute\nconst withTextWrapButtonProp = wp.compose.createHigherOrderComponent(BlockListBlock => {\n  return props => {\n    // If current block is not allowed\n    if (!enableTextWrapButtonOnBlocks.includes(props.name)) {\n      return el(BlockListBlock, { ...props });\n    }\n\n    const { attributes } = props;\n    const { textWrap } = attributes;\n\n    if (textWrap && textWrap === 'balance') {\n      return el(BlockListBlock, { className: 'text-wrap-balance', ...props });\n    } else {\n      return el(BlockListBlock, { ...props });\n    }\n  };\n}, 'withTextWrapButtonProp');\nwp.hooks.addFilter('editor.BlockListBlock', 'custom-attributes/with-text-wrap-button-prop', withTextWrapButtonProp);\n\n// Save textWrap attribute to blocks\n\nconst saveTextWrapAttribute = (extraProps, blockType, attributes) => {\n  // Do nothing if it's another block than our defined ones\n  if (enableTextWrapButtonOnBlocks.includes(blockType.name)) {\n    const { textWrap } = attributes;\n    if (textWrap && textWrap === 'balance') {\n      extraProps.className = classNames(extraProps.className, 'text-wrap-balance');\n    }\n  }\n  return extraProps;\n};\n\nwp.hooks.addFilter('blocks.getSaveContent.extraProps', 'custom-attributes/save-text-wrap-attribute', saveTextWrapAttribute);\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","module","exports","default","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","require","enableTextWrapButtonOnBlocks","wp","hooks","addFilter","settings","name","assign","attributes","textWrap","type","el","element","createElement","withTextWrapButton","compose","createHigherOrderComponent","BlockEdit","props","setAttributes","Fragment","blockEditor","BlockControls","group","components","ToolbarGroup","ToolbarButton","icon","label","i18n","__","isActive","onClick","withTextWrapButtonProp","BlockListBlock","className","saveTextWrapAttribute","extraProps","blockType"],"sourceRoot":""}